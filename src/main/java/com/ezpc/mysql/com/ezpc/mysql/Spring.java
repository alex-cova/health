/*
 * This file is generated by jOOQ.
 */
package com.ezpc.mysql;


import com.ezpc.mysql.tables.Appointment;
import com.ezpc.mysql.tables.Doctor;
import com.ezpc.mysql.tables.Drug;
import com.ezpc.mysql.tables.Hospital;
import com.ezpc.mysql.tables.Hospitaldoctor;
import com.ezpc.mysql.tables.Patient;
import com.ezpc.mysql.tables.Prescription;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Spring extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>spring</code>
     */
    public static final Spring SPRING = new Spring();

    /**
     * The table <code>spring.appointment</code>.
     */
    public final Appointment APPOINTMENT = Appointment.APPOINTMENT;

    /**
     * The table <code>spring.doctor</code>.
     */
    public final Doctor DOCTOR = Doctor.DOCTOR;

    /**
     * The table <code>spring.drug</code>.
     */
    public final Drug DRUG = Drug.DRUG;

    /**
     * The table <code>spring.hospital</code>.
     */
    public final Hospital HOSPITAL = Hospital.HOSPITAL;

    /**
     * The table <code>spring.hospitalDoctor</code>.
     */
    public final Hospitaldoctor HOSPITALDOCTOR = Hospitaldoctor.HOSPITALDOCTOR;

    /**
     * The table <code>spring.patient</code>.
     */
    public final Patient PATIENT = Patient.PATIENT;

    /**
     * The table <code>spring.prescription</code>.
     */
    public final Prescription PRESCRIPTION = Prescription.PRESCRIPTION;

    /**
     * No further instances allowed
     */
    private Spring() {
        super("spring", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Appointment.APPOINTMENT,
            Doctor.DOCTOR,
            Drug.DRUG,
            Hospital.HOSPITAL,
            Hospitaldoctor.HOSPITALDOCTOR,
            Patient.PATIENT,
            Prescription.PRESCRIPTION
        );
    }
}
