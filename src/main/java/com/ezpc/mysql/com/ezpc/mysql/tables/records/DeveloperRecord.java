/*
 * This file is generated by jOOQ.
 */
package com.ezpc.mysql.tables.records;


import com.ezpc.mysql.tables.Developer;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeveloperRecord extends UpdatableRecordImpl<DeveloperRecord> implements Record8<String, String, Integer, Byte, String, Integer, String, JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>spring.developer.uuid</code>.
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>spring.developer.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>spring.developer.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>spring.developer.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spring.developer.age</code>.
     */
    public void setAge(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>spring.developer.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>spring.developer.gender</code>.
     */
    public void setGender(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>spring.developer.gender</code>.
     */
    public Byte getGender() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>spring.developer.phoneNumber</code>.
     */
    public void setPhonenumber(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>spring.developer.phoneNumber</code>.
     */
    public String getPhonenumber() {
        return (String) get(4);
    }

    /**
     * Setter for <code>spring.developer.countryId</code>.
     */
    public void setCountryid(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>spring.developer.countryId</code>.
     */
    public Integer getCountryid() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>spring.developer.discordId</code>.
     */
    public void setDiscordid(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>spring.developer.discordId</code>.
     */
    public String getDiscordid() {
        return (String) get(6);
    }

    /**
     * Setter for <code>spring.developer.proLang</code>.
     */
    public void setProlang(JSON value) {
        set(7, value);
    }

    /**
     * Getter for <code>spring.developer.proLang</code>.
     */
    public JSON getProlang() {
        return (JSON) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<String, String, Integer, Byte, String, Integer, String, JSON> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<String, String, Integer, Byte, String, Integer, String, JSON> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Developer.DEVELOPER.UUID;
    }

    @Override
    public Field<String> field2() {
        return Developer.DEVELOPER.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Developer.DEVELOPER.AGE;
    }

    @Override
    public Field<Byte> field4() {
        return Developer.DEVELOPER.GENDER;
    }

    @Override
    public Field<String> field5() {
        return Developer.DEVELOPER.PHONENUMBER;
    }

    @Override
    public Field<Integer> field6() {
        return Developer.DEVELOPER.COUNTRYID;
    }

    @Override
    public Field<String> field7() {
        return Developer.DEVELOPER.DISCORDID;
    }

    @Override
    public Field<JSON> field8() {
        return Developer.DEVELOPER.PROLANG;
    }

    @Override
    public String component1() {
        return getUuid();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getAge();
    }

    @Override
    public Byte component4() {
        return getGender();
    }

    @Override
    public String component5() {
        return getPhonenumber();
    }

    @Override
    public Integer component6() {
        return getCountryid();
    }

    @Override
    public String component7() {
        return getDiscordid();
    }

    @Override
    public JSON component8() {
        return getProlang();
    }

    @Override
    public String value1() {
        return getUuid();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getAge();
    }

    @Override
    public Byte value4() {
        return getGender();
    }

    @Override
    public String value5() {
        return getPhonenumber();
    }

    @Override
    public Integer value6() {
        return getCountryid();
    }

    @Override
    public String value7() {
        return getDiscordid();
    }

    @Override
    public JSON value8() {
        return getProlang();
    }

    @Override
    public DeveloperRecord value1(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public DeveloperRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public DeveloperRecord value3(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public DeveloperRecord value4(Byte value) {
        setGender(value);
        return this;
    }

    @Override
    public DeveloperRecord value5(String value) {
        setPhonenumber(value);
        return this;
    }

    @Override
    public DeveloperRecord value6(Integer value) {
        setCountryid(value);
        return this;
    }

    @Override
    public DeveloperRecord value7(String value) {
        setDiscordid(value);
        return this;
    }

    @Override
    public DeveloperRecord value8(JSON value) {
        setProlang(value);
        return this;
    }

    @Override
    public DeveloperRecord values(String value1, String value2, Integer value3, Byte value4, String value5, Integer value6, String value7, JSON value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DeveloperRecord
     */
    public DeveloperRecord() {
        super(Developer.DEVELOPER);
    }

    /**
     * Create a detached, initialised DeveloperRecord
     */
    public DeveloperRecord(String uuid, String name, Integer age, Byte gender, String phonenumber, Integer countryid, String discordid, JSON prolang) {
        super(Developer.DEVELOPER);

        setUuid(uuid);
        setName(name);
        setAge(age);
        setGender(gender);
        setPhonenumber(phonenumber);
        setCountryid(countryid);
        setDiscordid(discordid);
        setProlang(prolang);
    }

    /**
     * Create a detached, initialised DeveloperRecord
     */
    public DeveloperRecord(com.ezpc.mysql.tables.pojos.Developer value) {
        super(Developer.DEVELOPER);

        if (value != null) {
            setUuid(value.getUuid());
            setName(value.getName());
            setAge(value.getAge());
            setGender(value.getGender());
            setPhonenumber(value.getPhonenumber());
            setCountryid(value.getCountryid());
            setDiscordid(value.getDiscordid());
            setProlang(value.getProlang());
        }
    }
}
