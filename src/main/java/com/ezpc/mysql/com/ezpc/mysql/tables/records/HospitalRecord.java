/*
 * This file is generated by jOOQ.
 */
package com.ezpc.mysql.tables.records;


import com.ezpc.mysql.tables.Hospital;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HospitalRecord extends UpdatableRecordImpl<HospitalRecord> implements Record4<Long, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>spring.hospital.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>spring.hospital.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>spring.hospital.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>spring.hospital.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spring.hospital.address</code>.
     */
    public void setAddress(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>spring.hospital.address</code>.
     */
    public String getAddress() {
        return (String) get(2);
    }

    /**
     * Setter for <code>spring.hospital.country</code>.
     */
    public void setCountry(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>spring.hospital.country</code>.
     */
    public String getCountry() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Hospital.HOSPITAL.ID;
    }

    @Override
    public Field<String> field2() {
        return Hospital.HOSPITAL.NAME;
    }

    @Override
    public Field<String> field3() {
        return Hospital.HOSPITAL.ADDRESS;
    }

    @Override
    public Field<String> field4() {
        return Hospital.HOSPITAL.COUNTRY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getAddress();
    }

    @Override
    public String component4() {
        return getCountry();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getAddress();
    }

    @Override
    public String value4() {
        return getCountry();
    }

    @Override
    public HospitalRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public HospitalRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public HospitalRecord value3(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public HospitalRecord value4(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public HospitalRecord values(Long value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HospitalRecord
     */
    public HospitalRecord() {
        super(Hospital.HOSPITAL);
    }

    /**
     * Create a detached, initialised HospitalRecord
     */
    public HospitalRecord(Long id, String name, String address, String country) {
        super(Hospital.HOSPITAL);

        setId(id);
        setName(name);
        setAddress(address);
        setCountry(country);
        resetChangedOnNotNull();
    }
}
