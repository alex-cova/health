/*
 * This file is generated by jOOQ.
 */
package com.ezpc.mysql.tables.records;


import com.ezpc.mysql.tables.Hospitaldoctor;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HospitaldoctorRecord extends UpdatableRecordImpl<HospitaldoctorRecord> implements Record3<Long, String, JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>spring.hospitalDoctor.hospitalId</code>.
     */
    public void setHospitalid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>spring.hospitalDoctor.hospitalId</code>.
     */
    public Long getHospitalid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>spring.hospitalDoctor.doctorId</code>.
     */
    public void setDoctorid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>spring.hospitalDoctor.doctorId</code>.
     */
    public String getDoctorid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spring.hospitalDoctor.permissions</code>.
     */
    public void setPermissions(JSON value) {
        set(2, value);
    }

    /**
     * Getter for <code>spring.hospitalDoctor.permissions</code>.
     */
    public JSON getPermissions() {
        return (JSON) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, JSON> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, JSON> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Hospitaldoctor.HOSPITALDOCTOR.HOSPITALID;
    }

    @Override
    public Field<String> field2() {
        return Hospitaldoctor.HOSPITALDOCTOR.DOCTORID;
    }

    @Override
    public Field<JSON> field3() {
        return Hospitaldoctor.HOSPITALDOCTOR.PERMISSIONS;
    }

    @Override
    public Long component1() {
        return getHospitalid();
    }

    @Override
    public String component2() {
        return getDoctorid();
    }

    @Override
    public JSON component3() {
        return getPermissions();
    }

    @Override
    public Long value1() {
        return getHospitalid();
    }

    @Override
    public String value2() {
        return getDoctorid();
    }

    @Override
    public JSON value3() {
        return getPermissions();
    }

    @Override
    public HospitaldoctorRecord value1(Long value) {
        setHospitalid(value);
        return this;
    }

    @Override
    public HospitaldoctorRecord value2(String value) {
        setDoctorid(value);
        return this;
    }

    @Override
    public HospitaldoctorRecord value3(JSON value) {
        setPermissions(value);
        return this;
    }

    @Override
    public HospitaldoctorRecord values(Long value1, String value2, JSON value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached HospitaldoctorRecord
     */
    public HospitaldoctorRecord() {
        super(Hospitaldoctor.HOSPITALDOCTOR);
    }

    /**
     * Create a detached, initialised HospitaldoctorRecord
     */
    public HospitaldoctorRecord(Long hospitalid, String doctorid, JSON permissions) {
        super(Hospitaldoctor.HOSPITALDOCTOR);

        setHospitalid(hospitalid);
        setDoctorid(doctorid);
        setPermissions(permissions);
        resetChangedOnNotNull();
    }
}
