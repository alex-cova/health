/*
 * This file is generated by jOOQ.
 */
package com.ezpc.mysql.tables.records;


import com.ezpc.mysql.tables.Prescription;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrescriptionRecord extends UpdatableRecordImpl<PrescriptionRecord> implements Record4<Long, String, LocalDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>spring.prescription.hospitalId</code>.
     */
    public void setHospitalid(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>spring.prescription.hospitalId</code>.
     */
    public Long getHospitalid() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>spring.prescription.doctorId</code>.
     */
    public void setDoctorid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>spring.prescription.doctorId</code>.
     */
    public String getDoctorid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>spring.prescription.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>spring.prescription.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>spring.prescription.uuid</code>.
     */
    public void setUuid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>spring.prescription.uuid</code>.
     */
    public String getUuid() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, LocalDateTime, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, LocalDateTime, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Prescription.PRESCRIPTION.HOSPITALID;
    }

    @Override
    public Field<String> field2() {
        return Prescription.PRESCRIPTION.DOCTORID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Prescription.PRESCRIPTION.TIMESTAMP;
    }

    @Override
    public Field<String> field4() {
        return Prescription.PRESCRIPTION.UUID;
    }

    @Override
    public Long component1() {
        return getHospitalid();
    }

    @Override
    public String component2() {
        return getDoctorid();
    }

    @Override
    public LocalDateTime component3() {
        return getTimestamp();
    }

    @Override
    public String component4() {
        return getUuid();
    }

    @Override
    public Long value1() {
        return getHospitalid();
    }

    @Override
    public String value2() {
        return getDoctorid();
    }

    @Override
    public LocalDateTime value3() {
        return getTimestamp();
    }

    @Override
    public String value4() {
        return getUuid();
    }

    @Override
    public PrescriptionRecord value1(Long value) {
        setHospitalid(value);
        return this;
    }

    @Override
    public PrescriptionRecord value2(String value) {
        setDoctorid(value);
        return this;
    }

    @Override
    public PrescriptionRecord value3(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public PrescriptionRecord value4(String value) {
        setUuid(value);
        return this;
    }

    @Override
    public PrescriptionRecord values(Long value1, String value2, LocalDateTime value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PrescriptionRecord
     */
    public PrescriptionRecord() {
        super(Prescription.PRESCRIPTION);
    }

    /**
     * Create a detached, initialised PrescriptionRecord
     */
    public PrescriptionRecord(Long hospitalid, String doctorid, LocalDateTime timestamp, String uuid) {
        super(Prescription.PRESCRIPTION);

        setHospitalid(hospitalid);
        setDoctorid(doctorid);
        setTimestamp(timestamp);
        setUuid(uuid);
        resetChangedOnNotNull();
    }
}
